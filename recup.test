void chargePiece(SDL_Surface *ecran, int ***tab,int taille1,int taille2, int taille3)
{
  SDL_Rect posCarreR;
  posCarreR.x = 10;
  posCarreR.y = 10;

  SDL_Surface *carreR = NULL;

  carreR = SDL_CreateRGBSurface(SDL_HWSURFACE, TAILLE_CARRE, TAILLE_CARRE, 32, 0, 0, 0, 0);
  SDL_FillRect(carreR, NULL, SDL_MapRGB(ecran->format, 255, 0, 0));
  

  int i,j,k,posCarreR_x;
  
  posCarreR_x = 10;

  for( i = 0; i < taille1; i++)
  { 
    //printf("\nPIECE %d\n\n",i);
    if(i >= 1){
      posCarreR.y += ((1 + maxNbLigne())*TAILLE_CARRE);

    }
    if(posCarreR.y >= 720 - ((maxNbLigne())*TAILLE_CARRE) ){
      //printf("dans le if posCarreR.y = %d\n",posCarreR.y);
      posCarreR.y = 10;
      posCarreR_x = posCarreR_x + (1 + maxNbCol())*TAILLE_CARRE;

    }
    if(posCarreR.x >= 1280){
      //reduire taille carr√©

    }  
    for(j = 0; j < taille2; j++)
    {
      //printf("boucle for posCarreR.y = %d\n",posCarreR.y);
      
      posCarreR.y += TAILLE_CARRE;
      posCarreR.x = posCarreR_x;

      for(k = 0; k < taille3; k++)
      {
        posCarreR.x += TAILLE_CARRE;

        if(tab[i][j][k] == 1){   
          SDL_BlitSurface(carreR, NULL, ecran, &posCarreR);
        }
      }
     
    }
  }
  SDL_FreeSurface(carreR);
}